const db = require('../db');

// RÃ©cupÃ©rer la liste complÃ¨te des mÃ©dicaments
exports.getAllMedicaments = async (req, res) => {
  try {
    const [rows] = await db.execute('SELECT * FROM medicaments_stock ORDER BY nom ASC');
    res.json(rows);
  } catch (error) {
    console.error('Erreur lors de la rÃ©cupÃ©ration des mÃ©dicaments :', error);
    res.status(500).json({ error: error.message });
  }
};

// Mettre Ã  jour la quantitÃ© dâ€™un mÃ©dicament (ex : diminution)
exports.updateQuantite = async (req, res) => {
  const { id } = req.params;
  const { quantite } = req.body;

  if (quantite === undefined || quantite < 0) {
    return res.status(400).json({ error: 'QuantitÃ© invalide' });
  }

  try {
    // VÃ©rifie que le mÃ©dicament existe
    const [medicament] = await db.execute('SELECT * FROM medicaments_stock WHERE id = ?', [id]);
    if (medicament.length === 0) {
      return res.status(404).json({ error: 'MÃ©dicament non trouvÃ©' });
    }

    await db.execute('UPDATE medicaments_stock SET quantite = ? WHERE id = ?', [quantite, id]);
    res.json({ message: 'QuantitÃ© mise Ã  jour avec succÃ¨s' });
  } catch (error) {
    console.error('Erreur lors de la mise Ã  jour de la quantitÃ© :', error);
    res.status(500).json({ error: error.message });
  }
};

exports.handleDemande = async (req, res) => {
  const { pharmacyId } = req.params;
  const { action } = req.body;

  try {
    console.log(`ðŸ’Š Demande ${action} reÃ§ue pour la pharmacie ID ${pharmacyId}`);
    res.json({ success: true, message: `Demande ${action} traitÃ©e.` });
  } catch (err) {
    res.status(500).json({ success: false, error: 'Erreur serveur' });
  }
};


